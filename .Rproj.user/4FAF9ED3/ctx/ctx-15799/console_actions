{
    "type": [
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        2
    ],
    "data": [
        "\nR version 4.3.2 (2023-10-31) -- \"Eye Holes\"\nCopyright (C) 2023 The R Foundation for Statistical Computing\nPlatform: x86_64-pc-linux-gnu (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "library('move2')",
        "> ",
        "library('lubridate')",
        "\nAttaching package: ‘lubridate’\n\n",
        "The following objects are masked from ‘package:base’:\n\n    date, intersect, setdiff, union\n\n",
        "> ",
        "library(\"sf\")",
        "Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE\n",
        "> ",
        "data <- readRDS(\"./data/raw/input1_move2loc_LatLon.rds\")",
        "> ",
        "    track.info <- mt_track_data(data)",
        "> ",
        "head(track.info)",
        "\u001B[38;5;246m# A tibble: 1 × 51\u001B[39m\n  individual_name_deployment_id deployment_id tag_id individual_id animal_life_stage animal_reproductive_…¹ attachment_type\n  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                               \u001B[3m\u001B[38;5;246m<int64>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<int6>\u001B[39m\u001B[23m       \u001B[3m\u001B[38;5;246m<int64>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<fct>\u001B[39m\u001B[23m             \u001B[3m\u001B[38;5;246m<fct>\u001B[39m\u001B[23m                  \u001B[3m\u001B[38;5;246m<fct>\u001B[39m\u001B[23m          \n\u001B[38;5;250m1\u001B[39m Goat.8810..deploy_id.1600804…    \u001B[4m1\u001B[24m600\u001B[4m8\u001B[24m\u001B[4m0\u001B[24m\u001B[4m4\u001B[24m509   1.\u001B[38;5;246me\u001B[39m9    \u001B[4m1\u001B[24m600\u001B[4m8\u001B[24m\u001B[4m0\u001B[24m\u001B[4m4\u001B[24m167 adult             lactating              collar         \n",
        "\u001B[38;5;246m# ℹ abbreviated name: ¹​animal_reproductive_condition\u001B[39m\n\u001B[38;5;246m# ℹ 44 more variables: deploy_off_timestamp <dttm>, deploy_on_person <chr>, deploy_on_timestamp <dttm>,\u001B[39m\n\u001B[38;5;246m#   sensor_type_ids <chr>, capture_location <POINT [°]>, deploy_on_location <POINT [°]>, deploy_off_location <POINT [°]>,\u001B[39m\n\u001B[38;5;246m#   nick_name <fct>, ring_id <fct>, sex <fct>, taxon_canonical_name <fct>, individual_number_of_deployments <int>,\u001B[39m\n\u001B[38;5;246m#   mortality_location <POINT [°]>, tag_local_identifier <fct>, tag_number_of_deployments <int>, study_id <int64>,\u001B[39m\n",
        "\u001B[38;5;246m#   acknowledgements <chr>, citation <chr>, grants_used <chr>, has_quota <lgl>, i_am_owner <lgl>, is_test <lgl>,\u001B[39m\n\u001B[38;5;246m#   license_terms <chr>, license_type <fct>, name <fct>, study_number_of_deployments <int>, …\u001B[39m\n",
        "> ",
        "mt_time_column(data)",
        "[1] \"timestamp\"\n",
        "> ",
        "mt_track_id_column(data)",
        "[1] \"individual_name_deployment_id\"\n",
        "> ",
        "    track.info.ord <- track.info %>% select(mt_track_id_column(data), everything())",
        "Error in select(., mt_track_id_column(data), everything()) : \n  could not find function \"select\"\n",
        "> ",
        "library(\"dyplr\")",
        "Error in library(\"dyplr\") : there is no package called ‘dyplr’\n",
        "> ",
        "library(\"dplyr\")",
        "\nAttaching package: ‘dplyr’\n\n",
        "The following objects are masked from ‘package:stats’:\n\n    filter, lag\n\n",
        "The following objects are masked from ‘package:base’:\n\n    intersect, setdiff, setequal, union\n\n",
        "> ",
        "    track.info.ord <- track.info %>% select(mt_track_id_column(data), everything())",
        "> ",
        "    names(track.info.ord) <- make.names(names(track.info.ord),allow_=FALSE)",
        "> ",
        "head(track.info.ord)",
        "\u001B[38;5;246m# A tibble: 1 × 51\u001B[39m\n  individual.name.deployment.id deployment.id tag.id individual.id animal.life.stage animal.reproductive.…¹ attachment.type\n  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                               \u001B[3m\u001B[38;5;246m<int64>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<int6>\u001B[39m\u001B[23m       \u001B[3m\u001B[38;5;246m<int64>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<fct>\u001B[39m\u001B[23m             \u001B[3m\u001B[38;5;246m<fct>\u001B[39m\u001B[23m                  \u001B[3m\u001B[38;5;246m<fct>\u001B[39m\u001B[23m          \n\u001B[38;5;250m1\u001B[39m Goat.8810..deploy_id.1600804…    \u001B[4m1\u001B[24m600\u001B[4m8\u001B[24m\u001B[4m0\u001B[24m\u001B[4m4\u001B[24m509   1.\u001B[38;5;246me\u001B[39m9    \u001B[4m1\u001B[24m600\u001B[4m8\u001B[24m\u001B[4m0\u001B[24m\u001B[4m4\u001B[24m167 adult             lactating              collar         \n",
        "\u001B[38;5;246m# ℹ abbreviated name: ¹​animal.reproductive.condition\u001B[39m\n\u001B[38;5;246m# ℹ 44 more variables: deploy.off.timestamp <dttm>, deploy.on.person <chr>, deploy.on.timestamp <dttm>,\u001B[39m\n\u001B[38;5;246m#   sensor.type.ids <chr>, capture.location <POINT [°]>, deploy.on.location <POINT [°]>, deploy.off.location <POINT [°]>,\u001B[39m\n\u001B[38;5;246m#   nick.name <fct>, ring.id <fct>, sex <fct>, taxon.canonical.name <fct>, individual.number.of.deployments <int>,\u001B[39m\n\u001B[38;5;246m#   mortality.location <POINT [°]>, tag.local.identifier <fct>, tag.number.of.deployments <int>, study.id <int64>,\u001B[39m\n",
        "\u001B[38;5;246m#   acknowledgements <chr>, citation <chr>, grants.used <chr>, has.quota <lgl>, i.am.owner <lgl>, is.test <lgl>,\u001B[39m\n\u001B[38;5;246m#   license.terms <chr>, license.type <fct>, name <fct>, study.number.of.deployments <int>, …\u001B[39m\n",
        "> ",
        "    track.info.ord <- track.info %>% select(tag.id, everything())",
        "\u001B[1m\u001B[33mError\u001B[39m in `select()`:\u001B[22m\n\u001B[33m!\u001B[39m Can't subset columns that don't exist.\n\u001B[31m✖\u001B[39m Column `tag.id` doesn't exist.\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "    track.info.ord <- track.info %>% select(\"tag.id\", everything())",
        "\u001B[1m\u001B[33mError\u001B[39m in `select()`:\u001B[22m\n\u001B[33m!\u001B[39m Can't subset columns that don't exist.\n\u001B[31m✖\u001B[39m Column `tag.id` doesn't exist.\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "    track.info <- mt_track_data(data)",
        "> ",
        "    track.info.ord <- track.info %>% select(mt_track_id_column(data), everything())",
        "> ",
        "    track.info.ord <- track.info %>% select(\"tag.id\", everything())",
        "\u001B[1m\u001B[33mError\u001B[39m in `select()`:\u001B[22m\n\u001B[33m!\u001B[39m Can't subset columns that don't exist.\n\u001B[31m✖\u001B[39m Column `tag.id` doesn't exist.\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "head(track.info)",
        "\u001B[38;5;246m# A tibble: 1 × 51\u001B[39m\n  individual_name_deployment_id deployment_id tag_id individual_id animal_life_stage animal_reproductive_…¹ attachment_type\n  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                               \u001B[3m\u001B[38;5;246m<int64>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<int6>\u001B[39m\u001B[23m       \u001B[3m\u001B[38;5;246m<int64>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<fct>\u001B[39m\u001B[23m             \u001B[3m\u001B[38;5;246m<fct>\u001B[39m\u001B[23m                  \u001B[3m\u001B[38;5;246m<fct>\u001B[39m\u001B[23m          \n\u001B[38;5;250m1\u001B[39m Goat.8810..deploy_id.1600804…    \u001B[4m1\u001B[24m600\u001B[4m8\u001B[24m\u001B[4m0\u001B[24m\u001B[4m4\u001B[24m509   1.\u001B[38;5;246me\u001B[39m9    \u001B[4m1\u001B[24m600\u001B[4m8\u001B[24m\u001B[4m0\u001B[24m\u001B[4m4\u001B[24m167 adult             lactating              collar         \n",
        "\u001B[38;5;246m# ℹ abbreviated name: ¹​animal_reproductive_condition\u001B[39m\n\u001B[38;5;246m# ℹ 44 more variables: deploy_off_timestamp <dttm>, deploy_on_person <chr>, deploy_on_timestamp <dttm>,\u001B[39m\n\u001B[38;5;246m#   sensor_type_ids <chr>, capture_location <POINT [°]>, deploy_on_location <POINT [°]>, deploy_off_location <POINT [°]>,\u001B[39m\n\u001B[38;5;246m#   nick_name <fct>, ring_id <fct>, sex <fct>, taxon_canonical_name <fct>, individual_number_of_deployments <int>,\u001B[39m\n\u001B[38;5;246m#   mortality_location <POINT [°]>, tag_local_identifier <fct>, tag_number_of_deployments <int>, study_id <int64>,\u001B[39m\n",
        "\u001B[38;5;246m#   acknowledgements <chr>, citation <chr>, grants_used <chr>, has_quota <lgl>, i_am_owner <lgl>, is_test <lgl>,\u001B[39m\n\u001B[38;5;246m#   license_terms <chr>, license_type <fct>, name <fct>, study_number_of_deployments <int>, …\u001B[39m\n",
        "> ",
        "    track.info <- mt_track_data(data)",
        "> ",
        "    track.info.ord <- track.info %>% select(mt_track_id_column(data), everything())",
        "> ",
        "    track.info.ord <- track.info %>% select(\"tag.id\", everything())",
        "\u001B[1m\u001B[33mError\u001B[39m in `select()`:\u001B[22m\n\u001B[33m!\u001B[39m Can't subset columns that don't exist.\n\u001B[31m✖\u001B[39m Column `tag.id` doesn't exist.\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "    track.info.ord <- track.info %>% select(\"tag_id\", everything())",
        "> ",
        "head(track.info.ord)",
        "\u001B[38;5;246m# A tibble: 1 × 51\u001B[39m\n      tag_id individual_name_deploym…¹ deployment_id individual_id animal_life_stage animal_reproductive_…² attachment_type\n     \u001B[3m\u001B[38;5;246m<int64>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                           \u001B[3m\u001B[38;5;246m<int64>\u001B[39m\u001B[23m       \u001B[3m\u001B[38;5;246m<int64>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<fct>\u001B[39m\u001B[23m             \u001B[3m\u001B[38;5;246m<fct>\u001B[39m\u001B[23m                  \u001B[3m\u001B[38;5;246m<fct>\u001B[39m\u001B[23m          \n\u001B[38;5;250m1\u001B[39m \u001B[4m1\u001B[24m600\u001B[4m7\u001B[24m\u001B[4m7\u001B[24m\u001B[4m9\u001B[24m812 Goat.8810..deploy_id.160…    \u001B[4m1\u001B[24m600\u001B[4m8\u001B[24m\u001B[4m0\u001B[24m\u001B[4m4\u001B[24m509    \u001B[4m1\u001B[24m600\u001B[4m8\u001B[24m\u001B[4m0\u001B[24m\u001B[4m4\u001B[24m167 adult             lactating              collar         \n",
        "\u001B[38;5;246m# ℹ abbreviated names: ¹​individual_name_deployment_id, ²​animal_reproductive_condition\u001B[39m\n\u001B[38;5;246m# ℹ 44 more variables: deploy_off_timestamp <dttm>, deploy_on_person <chr>, deploy_on_timestamp <dttm>,\u001B[39m\n\u001B[38;5;246m#   sensor_type_ids <chr>, capture_location <POINT [°]>, deploy_on_location <POINT [°]>, deploy_off_location <POINT [°]>,\u001B[39m\n\u001B[38;5;246m#   nick_name <fct>, ring_id <fct>, sex <fct>, taxon_canonical_name <fct>, individual_number_of_deployments <int>,\u001B[39m\n\u001B[38;5;246m#   mortality_location <POINT [°]>, tag_local_identifier <fct>, tag_number_of_deployments <int>, study_id <int64>,\u001B[39m\n",
        "\u001B[38;5;246m#   acknowledgements <chr>, citation <chr>, grants_used <chr>, has_quota <lgl>, i_am_owner <lgl>, is_test <lgl>,\u001B[39m\n\u001B[38;5;246m#   license_terms <chr>, license_type <fct>, name <fct>, study_number_of_deployments <int>, …\u001B[39m\n",
        "> ",
        "source(\"~/GIT_SYNC/MoveAppsGit/rds2csv/sdk.R\", echo=TRUE)",
        "\n> library(dotenv)\n\n> # You can control your local app development via environment variables.\n> # You can define things like input-data, app-configuration etc.\n> # Per de .... [TRUNCATED] \n\n> # provide common stuff\n> source(\"src/common/logger.R\")\n\n> source(\"src/common/runtime_configuration.R\")\n\n> clearRecentOutput()\n[INFO] Clearing recent output\n\n> # This will parse a JSON file containing the concrete configuration of\n> # the app run. Per default the file `/app-configuration.json` will be parse .... [TRUNCATED] ",
        "\n[DEBUG] parse stored configuration: './app-configuration.json'\n[INFO] app will be started with configuration:\n{\n  \"timezoneUTC\": false,\n  \"crsLonLat\": false\n}\n\n> # Lets simulate running your app on MoveApps\n> source(\"src/moveapps.R\")\n",
        "Loading required package: geosphere\n",
        "Loading required package: sp\n",
        "Loading required package: raster\n",
        "\nAttaching package: ‘raster’\n\n",
        "The following object is masked from ‘package:dplyr’:\n\n    select\n\n",
        "A successor to `move` has been developed and is available on cran (`move2`, https://bartk.gitlab.io/move2/). This brings speed improvements and is based on `sf`. Feedback (including missing functionality) on this new package is welcome, for new projects it might be worth considering starting directly with `move2`.\n",
        "\n> simulateMoveAppsRun(args)\n[DEBUG] Read input of type 'move::moveStack'\n[DEBUG] sourceFile: ./data/raw/input1_move2loc_LatLon.rds\n[DEBUG] Reading RDS from file './data/raw/input1_move2loc_LatLon.rds'\n[INFO] The timestamps of your data are already in: UTC.\n[INFO] The projection of your data is: EPSG:4326.\n[1] \"ERROR:  Error in (function (classes, fdef, mtable) : unable to find an inherited method for function ‘select’ for signature ‘\\\"tbl_df\\\"’\\n\"\n[DEBUG] errorFile: ./data/output/error.log\n[DEBUG] Writing to file ./data/output/error.log\n",
        "Error in (function (classes, fdef, mtable)  : \n  unable to find an inherited method for function ‘select’ for signature ‘\"tbl_df\"’\n",
        "\nRestarting R session...\n\n"
    ]
}